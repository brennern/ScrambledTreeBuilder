[{"path":"https://brennern.github.io/ScrambledTreeBuilder/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ScrambledTreeBuilder authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Noa Brenner. Author, maintainer.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Brenner N (2023). ScrambledTreeBuilder: Builds Phylogenetic Trees Showcasing Genome Scrambling Species. https://github.com/brennern/ScrambledTreeBuilder, https://brennern.github.io/ScrambledTreeBuilder/.","code":"@Manual{,   title = {ScrambledTreeBuilder: Builds Phylogenetic Trees Showcasing Genome Scrambling in Species},   author = {Noa Brenner},   year = {2023},   note = {https://github.com/brennern/ScrambledTreeBuilder, https://brennern.github.io/ScrambledTreeBuilder/}, }"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/index.html","id":"scrambledtreebuilder","dir":"","previous_headings":"","what":"Builds Phylogenetic Trees Showcasing Genome Scrambling in Species","title":"Builds Phylogenetic Trees Showcasing Genome Scrambling in Species","text":"goal ScrambledTreeBuilder allow users conveniently produce phylogenetic trees species purpose studying genome scrambling.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Builds Phylogenetic Trees Showcasing Genome Scrambling in Species","text":"can install development version ScrambledTreeBuilder GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"brennern/ScrambledTreeBuilder\")"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Builds Phylogenetic Trees Showcasing Genome Scrambling in Species","text":"performing Vs. genome comparison dozens species, may .yaml files output. order convert files dataframe R, may use formatStats() function. Extract .yaml files respective directory store information variable yamlFiles. build phylogenetic trees, data frame need tranformed matrix. function makeMatrix() accomplish . , order plot percent identity strand randomisation index scores tree, need extract tree data tibble utilize functions makeValueTibble(). Finally, visualize phylogenetic tree, can utilize visualizeTree() function inputting tibble data containing desired variable.","code":"library(ScrambledTreeBuilder)  resultsDir <- '/flash/LuscombeU/noa/RPackageData' yamlFileData <- list.files(resultsDir, pattern = \"*.yaml\", full.names = TRUE) names(yamlFileData) <- yamlFileData |> basename() |> sub(pat = \".yaml\", rep=\"\")  exDataFrame <- formatStats(yamlFileData) treeMatrix <- makeMatrix(exDataFrame, \"percent_identity_global\", 100, 50) valueMatrix <- makeMatrix(exDataFrame, \"index_avg_strandRand\", 1, 0.5) HClust <- hclust(dist(treeMatrix), method = \"complete\") Tibble <- tidytree::as_tibble(tidytree::as.phylo(HClust)) tibbleWithValue <- makeValueTibble(Tibble, valueMatrix) visualizeTree(tibbleWithValue, tibbleWithValue$value) #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale."},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/extractValues.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract values from a matrix. — extractValues","title":"Extract values from a matrix. — extractValues","text":"Extract values matrix.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/extractValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract values from a matrix. — extractValues","text":"","code":"extractValues(node, tibble, matrix, fun = mean)"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/extractValues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract values from a matrix. — extractValues","text":"node Node tibble Tibble data developed tree. matrix Matrix containing species data. fun Calculates mean, median, etc. node values plot tree (default fun mean)","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/extractValues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract values from a matrix. — extractValues","text":"Values store variable (percent identity, strand randomisation index, etc.)","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/extractValues.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract values from a matrix. — extractValues","text":"","code":"extractValues(node = 5, Tibble, valueMatrix) #> Error in extractValues(node = 5, Tibble, valueMatrix): nrow(children) == 2 is not TRUE"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/formatStats.html","id":null,"dir":"Reference","previous_headings":"","what":"Format species data and calculate percent identity and strand randomisation variables as part of the dataframe. — formatStats","title":"Format species data and calculate percent identity and strand randomisation variables as part of the dataframe. — formatStats","text":"Format species data calculate percent identity strand randomisation variables part dataframe.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/formatStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format species data and calculate percent identity and strand randomisation variables as part of the dataframe. — formatStats","text":"","code":"formatStats(x)"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/formatStats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format species data and calculate percent identity and strand randomisation variables as part of the dataframe. — formatStats","text":"df dataframe containing species data.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/formatStats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format species data and calculate percent identity and strand randomisation variables as part of the dataframe. — formatStats","text":"Formatted dataframe strand randomisation percent identities species calculated.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/formatStats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format species data and calculate percent identity and strand randomisation variables as part of the dataframe. — formatStats","text":"","code":"exDataFrame <- formatStats(yamlFileData) #> Warning: cannot open file '/flash/LuscombeU/noa/RPackageData/Halobacterium_litoreum___Halobacterium_noricense.yaml': No such file or directory #> Error in file(file, \"rt\", encoding = fileEncoding): cannot open the connection"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/getStats.html","id":null,"dir":"Reference","previous_headings":"","what":"Get statistical information from .yaml files. — getStats","title":"Get statistical information from .yaml files. — getStats","text":"Get statistical information .yaml files.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/getStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get statistical information from .yaml files. — getStats","text":"","code":"getStats(file)"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/getStats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get statistical information from .yaml files. — getStats","text":"file .yaml file containing species information.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/getStats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get statistical information from .yaml files. — getStats","text":"Unpacked .yaml file data.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/getStats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get statistical information from .yaml files. — getStats","text":"","code":"yamlFileData <- getStats(yamlFileData) #> Error in file(file, \"rt\", encoding = fileEncoding): invalid 'description' argument"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/makeMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a matrix from a data frame containing species data. — makeMatrix","title":"Make a matrix from a data frame containing species data. — makeMatrix","text":"Make matrix data frame containing species data.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/makeMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a matrix from a data frame containing species data. — makeMatrix","text":"","code":"makeMatrix(df, column, defaultDiagonal = 100, defaultValue = NA)"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/makeMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a matrix from a data frame containing species data. — makeMatrix","text":"df Data frame containing species information. column variable data frame want extract species data . defaultDiagonal defaultDiagonal defaultValue defaultValue","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/makeMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a matrix from a data frame containing species data. — makeMatrix","text":"matrix containing species names data selected variable.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/makeMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a matrix from a data frame containing species data. — makeMatrix","text":"","code":"makeMatrix(exDataFrame, \"percent_identity_global\", 100, 50) #>                                   Halobacterium_noricense #> Halobacterium_noricense                         100.00000 #> Halobacterium_salinarum                          74.74168 #> Haloferax_mediterranei_ATCC_33500                66.51318 #> Haloferax_volcanii_DS2                           69.96063 #> Salarchaeum_japonicum                            71.94129 #> Halobacterium_litoreum                           78.87231 #>                                   Halobacterium_salinarum #> Halobacterium_noricense                          74.72164 #> Halobacterium_salinarum                         100.00000 #> Haloferax_mediterranei_ATCC_33500                67.06152 #> Haloferax_volcanii_DS2                           68.47755 #> Salarchaeum_japonicum                            71.82141 #> Halobacterium_litoreum                           75.78684 #>                                   Haloferax_mediterranei_ATCC_33500 #> Halobacterium_noricense                                    68.55420 #> Halobacterium_salinarum                                    67.06788 #> Haloferax_mediterranei_ATCC_33500                         100.00000 #> Haloferax_volcanii_DS2                                     80.98460 #> Salarchaeum_japonicum                                      68.70265 #> Halobacterium_litoreum                                     68.88111 #>                                   Haloferax_volcanii_DS2 Salarchaeum_japonicum #> Halobacterium_noricense                         69.98252              72.22600 #> Halobacterium_salinarum                         68.48654              71.57797 #> Haloferax_mediterranei_ATCC_33500               80.80996              68.50482 #> Haloferax_volcanii_DS2                         100.00000              69.84616 #> Salarchaeum_japonicum                           69.87968             100.00000 #> Halobacterium_litoreum                          70.25591              72.76736 #>                                   Halobacterium_litoreum #> Halobacterium_noricense                         78.80471 #> Halobacterium_salinarum                         75.89491 #> Haloferax_mediterranei_ATCC_33500               68.49688 #> Haloferax_volcanii_DS2                          70.22052 #> Salarchaeum_japonicum                           72.77139 #> Halobacterium_litoreum                         100.00000"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/makeValueTibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Make new tibble dataset with added value column from a matrix — makeValueTibble","title":"Make new tibble dataset with added value column from a matrix — makeValueTibble","text":"Make new tibble dataset added value column matrix","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/makeValueTibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make new tibble dataset with added value column from a matrix — makeValueTibble","text":"","code":"makeValueTibble(tibble, matrix)"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/makeValueTibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make new tibble dataset with added value column from a matrix — makeValueTibble","text":"tibble Original tibble dataset add value column . matrix Matrix containing values add tibble.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/makeValueTibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make new tibble dataset with added value column from a matrix — makeValueTibble","text":"New tibble values added.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/makeValueTibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make new tibble dataset with added value column from a matrix — makeValueTibble","text":"","code":"makeValueTibble(Tibble, valueMatrix) #> # A tbl_tree abstraction: 11 × 5 #> # which can be converted to treedata or phylo  #> # via as.treedata or as.phylo #>    parent  node branch.length label                               value #>     <int> <int>         <dbl> <chr>                               <dbl> #>  1     11     1         15.0  Halobacterium_noricense           NA      #>  2     10     2         18.0  Halobacterium_salinarum           NA      #>  3      8     3         13.7  Haloferax_mediterranei_ATCC_33500 NA      #>  4      8     4         13.7  Haloferax_volcanii_DS2            NA      #>  5      9     5         20.1  Salarchaeum_japonicum             NA      #>  6     11     6         15.0  Halobacterium_litoreum            NA      #>  7      7     7         NA    NA                                 0.0666 #>  8      7     8         11.1  NA                                 0.337  #>  9      7     9          4.62 NA                                 0.121  #> 10      9    10          2.19 NA                                 0.387  #> 11     10    11          2.98 NA                                 0.397"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/visualizeTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a phylogenetic tree using tibble data. — visualizeTree","title":"Create a phylogenetic tree using tibble data. — visualizeTree","text":"Create phylogenetic tree using tibble data.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/visualizeTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a phylogenetic tree using tibble data. — visualizeTree","text":"","code":"visualizeTree(tibble, value)"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/visualizeTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a phylogenetic tree using tibble data. — visualizeTree","text":"tibble Tibble data containing species genome information.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/visualizeTree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a phylogenetic tree using tibble data. — visualizeTree","text":"phylogenetic tree showcasing phylogeny species additional calculated values.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/visualizeTree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a phylogenetic tree using tibble data. — visualizeTree","text":"","code":"Tree <- visualizeTree(tibbleWithValue) #> Registered S3 methods overwritten by 'treeio': #>   method              from     #>   MRCA.phylo          tidytree #>   MRCA.treedata       tidytree #>   Nnode.treedata      tidytree #>   Ntip.treedata       tidytree #>   ancestor.phylo      tidytree #>   ancestor.treedata   tidytree #>   child.phylo         tidytree #>   child.treedata      tidytree #>   full_join.phylo     tidytree #>   full_join.treedata  tidytree #>   groupClade.phylo    tidytree #>   groupClade.treedata tidytree #>   groupOTU.phylo      tidytree #>   groupOTU.treedata   tidytree #>   inner_join.phylo    tidytree #>   inner_join.treedata tidytree #>   is.rooted.treedata  tidytree #>   nodeid.phylo        tidytree #>   nodeid.treedata     tidytree #>   nodelab.phylo       tidytree #>   nodelab.treedata    tidytree #>   offspring.phylo     tidytree #>   offspring.treedata  tidytree #>   parent.phylo        tidytree #>   parent.treedata     tidytree #>   root.treedata       tidytree #>   rootnode.phylo      tidytree #>   sibling.phylo       tidytree #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale."}]
