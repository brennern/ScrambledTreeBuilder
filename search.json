[{"path":"https://brennern.github.io/ScrambledTreeBuilder/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ScrambledTreeBuilder authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Noa Brenner. Author, maintainer.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Brenner N (2023). ScrambledTreeBuilder: Builds Phylogenetic Trees Showcasing Genome Scrambling Species.. https://github.com/brennern/ScrambledTreeBuilder, https://brennern.github.io/ScrambledTreeBuilder/.","code":"@Manual{,   title = {ScrambledTreeBuilder: Builds Phylogenetic Trees Showcasing Genome Scrambling in Species.},   author = {Noa Brenner},   year = {2023},   note = {https://github.com/brennern/ScrambledTreeBuilder, https://brennern.github.io/ScrambledTreeBuilder/}, }"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/index.html","id":"scrambledtreebuilder","dir":"","previous_headings":"","what":"Builds Phylogenetic Trees Showcasing Genome Scrambling in Species.","title":"Builds Phylogenetic Trees Showcasing Genome Scrambling in Species.","text":"goal ScrambledTreeBuilder allow users conveniently produce phylogenetic trees species purpose studying genome scrambling.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Builds Phylogenetic Trees Showcasing Genome Scrambling in Species.","text":"can install development version ScrambledTreeBuilder GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"brennern/ScrambledTreeBuilder\")"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Builds Phylogenetic Trees Showcasing Genome Scrambling in Species.","text":"performing Vs. genome comparison dozens species, may .yaml files output. order convert files dataframe R, may use ScrambledTreeBuilder::formatStats() function. Extract .yaml files respective directory store information variable yamlFiles. build phylogenetic trees, data frame need tranformed matrix. function ScrambledTreeBuilder::makeMatrix() accomplish . , order plot percent identity strand randomisation index scores tree, need extract tree data tibble utilize functions ScrambledTreeBuilder::extractPercentID() ScrambledTreeBuilder::extractStrandRandIDs().","code":"library(ScrambledTreeBuilder)  params <- list() params$resultsDir <- '/flash/LuscombeU/noa/halobacteria/results/genomicbreaks' yamlFiles <- list.files(params$resultsDir, pattern = \"*.yaml\", full.names = TRUE) names(yamlFiles) <- yamlFiles |> basename() |> sub(pat = \".yaml\", rep=\"\")  dataframe <- formatStats() m <- makeMatrix(dataframe, \"percent_identity_global\", 100, 50) hclust <- hclust(dist(m), method = \"complete\") dend <- as.dendrogram(hclust)  m1 <- makeMatrix(dataframe, \"index_avg_strandRand\", 100, 50) as_tibble(as.phylo(dend)) -> td sRIs <- unique(td$parent) |> sort() |> purrr::set_names() |> sapply(extractStrandRandIDs, td, m1) pIDs <- unique(td$parent) |> sort() |> purrr::set_names() |> sapply(extractPercentID, td, m) td$strandRand <- NA td$percentID <- NA td[names(sRIs), \"strandRand\"] <- unname(sRIs) td[names(pIDs), \"percentID\"] <- unname(pIDs)"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/extractPercentID.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract percent identities between species. — extractPercentID","title":"Extract percent identities between species. — extractPercentID","text":"Extract percent identities species.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/extractPercentID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract percent identities between species. — extractPercentID","text":"","code":"extractPercentID(node, tibble, matrix, fun = mean)"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/extractPercentID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract percent identities between species. — extractPercentID","text":"node Node. tibble Tibble data dendrogram. matrix Matrix created makeMatrix function. fun Calculates mean percent identity nodes tree.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/extractPercentID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract percent identities between species. — extractPercentID","text":"Percent identity scores store variable.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/extractPercentID.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract percent identities between species. — extractPercentID","text":"","code":"HClust <- hclust(dist(Matrix), method = \"complete\") Dendrogram <- as.dendrogram(HClust) TD <- as_tibble(as.phylo(Dendrogram)) #> Error in as_tibble(as.phylo(Dendrogram)): could not find function \"as_tibble\" pIDs <- unique(TD$parent) |> sort() |> purrr::set_names() |> sapply(extractPercentID, TD, Matrix) #> Error in child(tibble, node): could not find function \"child\" TD$percentID <- NA TD[names(pIDs), \"percentID\"] <- unname(pIDs) #> Error in eval(expr, envir, enclos): object 'pIDs' not found"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/extractStrandRandIDs.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Strand Randomisation Indices Between Species. — extractStrandRandIDs","title":"Extract Strand Randomisation Indices Between Species. — extractStrandRandIDs","text":"Extract Strand Randomisation Indices Species.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/extractStrandRandIDs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Strand Randomisation Indices Between Species. — extractStrandRandIDs","text":"","code":"extractStrandRandIDs(node, tibble, matrix, fun = mean)"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/extractStrandRandIDs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Strand Randomisation Indices Between Species. — extractStrandRandIDs","text":"node Node. tibble Tibble data dendrogram. matrix Matrix created makeMatrix function. fun Calculates mean strand randomisation index nodes tree.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/extractStrandRandIDs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Strand Randomisation Indices Between Species. — extractStrandRandIDs","text":"Strand randomisation scores store variable.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/extractStrandRandIDs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Strand Randomisation Indices Between Species. — extractStrandRandIDs","text":"","code":"HClust <- hclust(dist(m), method = \"complete\") #> Error in eval(expr, envir, enclos): object 'm' not found Dendrogram <- as.dendrogram(HClust) TD <- as_tibble(as.phylo(dend)) #> Error in as_tibble(as.phylo(dend)): could not find function \"as_tibble\" Matrix2 <- makeMatrix(DataFrame, \"index_avg_strandRand\", 100, 50) sRIs <- unique(TD$parent) |> sort() |> purrr::set_names() |> sapply(extractStrandRandIDs, TD, Matrix2) #> Error in child(tibble, node): could not find function \"child\" TD$strandRand <- NA TD[names(sRIs), \"strandRand\"] <- unname(sRIs) #> Error in eval(expr, envir, enclos): object 'sRIs' not found"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/formatStats.html","id":null,"dir":"Reference","previous_headings":"","what":"Format species data and calculate percent identity and strand randomisation variables as part of the dataframe. — formatStats","title":"Format species data and calculate percent identity and strand randomisation variables as part of the dataframe. — formatStats","text":"Format species data calculate percent identity strand randomisation variables part dataframe.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/formatStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format species data and calculate percent identity and strand randomisation variables as part of the dataframe. — formatStats","text":"","code":"formatStats(yamlInput)"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/formatStats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format species data and calculate percent identity and strand randomisation variables as part of the dataframe. — formatStats","text":"df dataframe containing species data.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/formatStats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format species data and calculate percent identity and strand randomisation variables as part of the dataframe. — formatStats","text":"Formatted dataframe strand randomisation percent identities species calculated.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/formatStats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format species data and calculate percent identity and strand randomisation variables as part of the dataframe. — formatStats","text":"","code":"DataFrame <- formatStats(yamlFileData) #> Warning: cannot open file '/flash/LuscombeU/noa/RPackageData/Halobacterium_litoreum___Halobacterium_noricense.yaml': No such file or directory #> Error in file(file, \"rt\", encoding = fileEncoding): cannot open the connection"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/getStats.html","id":null,"dir":"Reference","previous_headings":"","what":"Get statistics information from .yaml files. — getStats","title":"Get statistics information from .yaml files. — getStats","text":"Get statistics information .yaml files.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/getStats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get statistics information from .yaml files. — getStats","text":"","code":"getStats(file)"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/getStats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get statistics information from .yaml files. — getStats","text":"file .yaml file containing species information.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/getStats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get statistics information from .yaml files. — getStats","text":"Data.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/makeMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a matrix from a data frame containing species data. — makeMatrix","title":"Make a matrix from a data frame containing species data. — makeMatrix","text":"Make matrix data frame containing species data.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/makeMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a matrix from a data frame containing species data. — makeMatrix","text":"","code":"makeMatrix(df, column, defaultDiagonal = 100, defaultValue = NA)"},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/makeMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a matrix from a data frame containing species data. — makeMatrix","text":"df Data frame containing species information. column variable data frame want extract species data . defaultDiagonal defaultDiagonal defaultValue defaultValue","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/makeMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a matrix from a data frame containing species data. — makeMatrix","text":"matrix containing species names data selected variable.","code":""},{"path":"https://brennern.github.io/ScrambledTreeBuilder/reference/makeMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a matrix from a data frame containing species data. — makeMatrix","text":"","code":"Matrix <- makeMatrix(DataFrame, \"percent_identity_global\", 100, 50)"}]
